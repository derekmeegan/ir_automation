{
 "Resources": {
  "WorkerLambdaExecutionRole1E12F43B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/WorkerLambdaExecutionRole/Resource"
   }
  },
  "WorkerLambdaExecutionRoleDefaultPolicy2B56AF76": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":secretsmanager:us-east-1:699328772264:secret:IRWorkflow/GroqApiKey-??????"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WorkerLambdaExecutionRoleDefaultPolicy2B56AF76",
    "Roles": [
     {
      "Ref": "WorkerLambdaExecutionRole1E12F43B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/WorkerLambdaExecutionRole/DefaultPolicy/Resource"
   }
  },
  "SchedulingTable1EC09B43": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "ticker",
      "AttributeType": "S"
     },
     {
      "AttributeName": "date",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "ticker",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "date",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/SchedulingTable/Resource"
   }
  },
  "HistoricalTableDE754A78": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "ticker",
      "AttributeType": "S"
     },
     {
      "AttributeName": "date",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "ticker",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "date",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/HistoricalTable/Resource"
   }
  },
  "ConfigTable5CD72349": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "ticker",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "ticker",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/ConfigTable/Resource"
   }
  },
  "CSVBucketF994380E": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/CSVBucket/Resource"
   }
  },
  "CSVBucketPolicy35120E13": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "CSVBucketF994380E"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "CSVBucketF994380E",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CSVBucketF994380E",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/CSVBucket/Policy/Resource"
   }
  },
  "CSVBucketAutoDeleteObjectsCustomResource37A370FF": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "CSVBucketF994380E"
    }
   },
   "DependsOn": [
    "CSVBucketPolicy35120E13"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/CSVBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-699328772264-us-east-1",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "CSVBucketF994380E"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "ManagerFunctionServiceRole9FB9D2B0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/ManagerFunction/ServiceRole/Resource"
   }
  },
  "ManagerFunctionServiceRoleDefaultPolicy01DD474E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SchedulingTable1EC09B43",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "HistoricalTableDE754A78",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConfigTable5CD72349",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CSVBucketF994380E",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CSVBucketF994380E",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "lambda:CreateFunction",
        "lambda:UpdateFunctionConfiguration",
        "lambda:UpdateFunctionCode",
        "lambda:GetFunction"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "events:PutRule",
        "events:PutTargets",
        "events:DeleteRule",
        "events:RemoveTargets"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "WorkerLambdaExecutionRole1E12F43B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ManagerFunctionServiceRoleDefaultPolicy01DD474E",
    "Roles": [
     {
      "Ref": "ManagerFunctionServiceRole9FB9D2B0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/ManagerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ManagerFunction2CE79BA4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-699328772264-us-east-1",
     "S3Key": "4ddf85f4fce2d911514332832194e828a096981e1efc8b90d9ee8b0d860f7b41.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "SchedulingTable1EC09B43"
      },
      "WORKER_IMAGE_URI": {
       "Fn::Sub": "699328772264.dkr.ecr.us-east-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-699328772264-us-east-1:e2128a9f4c45397fdb856981717ba72953fb080e33811d326560817d93d89e77"
      },
      "WORKER_EXECUTION_ROLE": {
       "Fn::GetAtt": [
        "WorkerLambdaExecutionRole1E12F43B",
        "Arn"
       ]
      },
      "HISTORICAL_TABLE": {
       "Ref": "HistoricalTableDE754A78"
      },
      "CONFIG_TABLE": {
       "Ref": "ConfigTable5CD72349"
      },
      "CSV_BUCKET": {
       "Ref": "CSVBucketF994380E"
      },
      "AWS_ACCOUNT_ID": "699328772264",
      "GROQ_API_SECRET_ARN": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":secretsmanager:us-east-1:699328772264:secret:IRWorkflow/GroqApiKey"
        ]
       ]
      }
     }
    },
    "Handler": "manager.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ManagerFunctionServiceRole9FB9D2B0",
      "Arn"
     ]
    },
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "ManagerFunctionServiceRoleDefaultPolicy01DD474E",
    "ManagerFunctionServiceRole9FB9D2B0"
   ],
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/ManagerFunction/Resource",
    "aws:asset:path": "asset.4ddf85f4fce2d911514332832194e828a096981e1efc8b90d9ee8b0d860f7b41",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DailyManagerTrigger66343A8F": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "cron(0 0 * * ? *)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "ManagerFunction2CE79BA4",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/DailyManagerTrigger/Resource"
   }
  },
  "DailyManagerTriggerAllowEventRuleMyServerlessStackManagerFunction4869FD71608E3E17": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ManagerFunction2CE79BA4",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "DailyManagerTrigger66343A8F",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/DailyManagerTrigger/AllowEventRuleMyServerlessStackManagerFunction4869FD71"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQy07DMBD8ltwdt6QH4AYtQuIWBe7Vxllak9iO/CiKLP87fqRFPc3M7nhnvQ19eHyivqng19RsGOuJ99R/WmAj6dAopxmS2Dt6DoL6Tk1IDt8yY6smzpYkCwtkWCQINcQJX9AXZyaBmB31e8dGtKm4sgL/Y+50EXsw8TUyfQRj0Br6pmJZfwg44WuqpB7tcFaGW6WX5I9hV3exTCD6AaiPEe9OMsuVzFujFtyYqGLCBWX0+86tH4wYAjk4Y5W4HSI1bvyu1Wp14QPqnJ9T4w1PXJ4CaWqY5jPQbfWyHnmTsCxVz4s9K7la2iyuOwZS9GZHn2mzrX4M57V20nKBtCv4B3GewpbAAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "MyServerlessStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}